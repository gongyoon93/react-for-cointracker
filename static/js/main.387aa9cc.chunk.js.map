{"version":3,"sources":["api.tsx","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","isDarkAtom","atom","key","default","Chart","coinId","isDark","useRecoilValue","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","close","options","theme","mode","chart","width","height","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","labels","axisTicks","axisBorder","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Price","Title","styled","h1","Loader","span","Container","div","Header","header","Overview","OverviewItem","Tabs","Tab","props","isActive","accentColor","textColor","Description","p","BackBtnContainer","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","rank","symbol","quotes","USD","description","total_supply","max_supply","to","path","CoinsList","ul","li","Img","img","ToggleBtn","button","Coins","setDarkAtom","useSetRecoilState","onClick","prev","slice","coin","pathname","id","src","toLowerCase","Router","basename","process","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.387aa9cc.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n    return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId:string) {\r\n    return fetch(`${BASE_URL}/coins/${coinId}`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinTickers(coinId:string) {\r\n    return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinHistory(coinId:string){\r\n    const endDate = Math.floor(Date.now() / 1000);\r\n    const startDate = endDate - 60*60*24*7*2;\r\n    return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then((response) => response.json());\r\n}","import { atom } from \"recoil\";\r\n\r\nexport const isDarkAtom = atom({\r\n     key:\"isDark\",\r\n     default: true, \r\n});","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport styled from \"styled-components\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\ninterface ChartProps {\r\n    coinId: string;\r\n}\r\n\r\ninterface IHistorical {\r\n    time_open: string;\r\ntime_close: string;\r\nopen: number;\r\nhigh: number;\r\nlow: number;\r\nclose: number;\r\nvolume: number;\r\nmarket_cap: number;\r\n}\r\n\r\nfunction Chart({coinId}:ChartProps) {\r\n    const isDark = useRecoilValue(isDarkAtom);\r\n    const {isLoading,data} = useQuery<IHistorical[]>([\"ohlcv\",coinId],() => fetchCoinHistory(coinId),\r\n    {\r\n        refetchInterval: 10000,\r\n    });\r\n    return <div>{isLoading ? \"Loading chart...\" : <ApexChart \r\n    type=\"line\" \r\n    series={[\r\n        {\r\n            name: \"Price\",\r\n            data : data?.map(price => price.close),\r\n        }\r\n    ]}\r\n    options={{\r\n        theme: {\r\n           mode: isDark ? \"dark\" : \"light\", \r\n        },\r\n        chart: {\r\n            width: 500,\r\n            height: 400,\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n            background: \"transparent\",\r\n        },\r\n        grid: {\r\n            show: false,\r\n        },\r\n        stroke: {\r\n            curve:\"smooth\",\r\n            width: 5,\r\n        },\r\n        yaxis: {\r\n            show: false,\r\n        },\r\n        xaxis: {\r\n            labels: {\r\n                show: false,\r\n            },\r\n            axisTicks:{\r\n                show: false,\r\n            },\r\n            axisBorder: {\r\n                show: false,\r\n            },\r\n            categories: data?.map((price) => price.time_close),\r\n            type: \"datetime\",\r\n        },\r\n        fill: {\r\n            type:\"gradient\",\r\n            gradient:{gradientToColors: [\"rgb(71,66,63)\"], stops: [0, 100]}\r\n        },\r\n        colors: ['rgb(179,177,178)'],\r\n        tooltip: {\r\n            y: {\r\n                formatter: (value) => `$ ${value.toFixed(3)}`\r\n            }\r\n        },\r\n    }}/>}</div>;\r\n}\r\n\r\nexport default Chart;","function Price() {\r\n    return <h1>Price</h1>;\r\n}\r\n\r\nexport default Price;  ","import { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Switch, Route, useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport { IoIosArrowDropleftCircle } from 'react-icons/io';\r\n\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: rgb(82,117,120);\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background: linear-gradient(rgb(82,117,120),rgb(132,151,143));\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background: linear-gradient(rgb(82,117,120),rgb(132,151,143));\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\ninterface RouteState {\r\n  name: string;\r\n}\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nconst BackBtnContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 50px;\r\n    color: rgb(132,151,143);\r\n`;\r\n\r\ninterface ICoinProps {\r\n    isDark: boolean;\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const {isLoading: infoLoading, data: infoData} = useQuery<InfoData>([\"info\", coinId], () => fetchCoinInfo(coinId));\r\n  const {isLoading: tickersLoading, data: tickersData} = useQuery<PriceData>([\"tickers\", coinId], () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval : 5000,\r\n    }\r\n  );\r\nconst loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n          <title>{state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Open Source:</span>\r\n              <span>{tickersData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n            <Switch>\r\n                <Route path={`/:coinId/price`}>\r\n                   <Price /> \r\n                </Route>\r\n                <Route path={`/:coinId/chart`}>\r\n                   <Chart coinId={coinId}/> \r\n                </Route>\r\n            </Switch>\r\n            <BackBtnContainer>\r\n              <Link to=\"/\"> <IoIosArrowDropleftCircle/></Link>\r\n            </BackBtnContainer>\r\n            \r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coin;","import { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n    max-width: 480px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    height: 10vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n    background: linear-gradient(rgb(82,117,120),rgb(132,151,143));\r\n    margin-bottom: 10px;\r\n    border-radius: 15px;\r\n    a {\r\n        padding: 20px;\r\n        transition: color 0.2s ease-in;\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    &:hover {\r\n        a {\r\n            color: ${(props) => props.theme.accentColor};\r\n        }\r\n    }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    font-size: 48px;\r\n    color: rgb(82,117,120);\r\n`;\r\n\r\nconst Loader = styled.span`\r\n    text-align: center;\r\n    display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n    width:35px;\r\n    height:35px;\r\n    margin-right: 10px;\r\n`;\r\n\r\ninterface ICoin {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    is_new: boolean;\r\n    is_active: boolean;\r\n    type: string;\r\n}\r\n\r\ninterface ICoinsProps {\r\n    toggleDark: () => void;\r\n}\r\n\r\nconst ToggleBtn = styled.button`\r\n    margin-left: 30px;\r\n    background-color: rgb(82,117,120);\r\n    color: white;\r\n    margin-top: 15px;\r\n`;\r\n\r\nfunction Coins() {\r\n    const { isLoading, data} = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n    const isDark = useRecoilValue(isDarkAtom);\r\n    const setDarkAtom = useSetRecoilState(isDarkAtom);\r\n    const toggleDarkAtom = () => setDarkAtom(prev => !prev);\r\n    return <Container>\r\n        <Helmet>\r\n        <title>Coin Tracker</title>\r\n      </Helmet>\r\n        <Header>\r\n            <Title>Coin Tracker</Title>\r\n            <ToggleBtn onClick={toggleDarkAtom}>{isDark ? \"DarkMode Off\" : \"DarkMode On\"}</ToggleBtn>\r\n        </Header>\r\n        {isLoading ? (<Loader>Loading...</Loader>) : (<CoinsList>\r\n                {data?.slice(0,100).map(coin =><Coin key={coin.id}>\r\n                        <Link to={{\r\n                            pathname: `${coin.id}`,\r\n                            state: {name:coin.name } \r\n                        }}>\r\n                            <Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}/>\r\n                            {coin.name} &rarr;\r\n                        </Link>\r\n                    </Coin>)}\r\n            </CoinsList>)}\r\n    </Container>;\r\n}\r\n\r\nexport default Coins;","import {BrowserRouter, Switch, Route} from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\ninterface IRouterProps {\r\n    toggleDark: () => void;\r\n    isDark: boolean;\r\n}\r\n\r\nfunction Router(){\r\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n            <Route path=\"/:coinId\">\r\n                <Coin />\r\n            </Route>\r\n            <Route path=\"/\">\r\n                <Coins />\r\n            </Route>\r\n        </Switch>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default Router;","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme:DefaultTheme = {\r\n     bgColor: \"#2f3640\",\r\n     textColor: \"#f5f6fa\",\r\n     accentColor: \"#9c88ff\",\r\n}\r\n\r\nexport const lightTheme:DefaultTheme = {\r\n     bgColor: \"rgb(255,255,255)\",\r\n     textColor: \"rgb(173,166,146)\",\r\n     accentColor: \"rgb(255,255,255)\",\r\n} ","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools} from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Jua&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font-family: 'Jua', sans-serif;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Jua', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor}\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return ( \n    <>\n    <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n      <GlobalStyle />\n      <Router/> \n      <ReactQueryDevtools initialIsOpen={true}/>\n      </ThemeProvider>\n    </>\n    );\n}\n\nexport default App;  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RecoilRoot } from 'recoil';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n          <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}